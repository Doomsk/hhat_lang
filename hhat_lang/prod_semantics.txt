"program : importing functions main"
"importing : "
"importing : IMPORTS OPEN import_symbol CLOSE"
"import_symbol : "
"import_symbol : DSYMBOL import_symbol | STRING import_symbol"
"functions : function functions"
"functions : "
"function : FUNCTION func_template"
"main : MAIN func_template"
"main : "
"func_template : atype asymbol func_params COLON OPEN func_body func_return CLOSE"
"atype : NULL_TYPE | BOOL_TYPE | INTEGER_TYPE | FLOAT_TYPE | STRING_TYPE | GATES_TYPE | REGISTER_TYPE | LIST_TYPE | HASHMAP_TYPE | MEAS_TYPE"
"asymbol : SYMBOL | QSYMBOL | PSYMBOL"
"func_params : OPEN atype asymbol func_params2 CLOSE"
"func_params :  "
"func_params2 : COMMA atype asymbol func_params2"
"func_params2 : "
"func_body : gen_expr"
"func_return : RETURN OPEN value_call_expr2 CLOSE | MEASURE OPEN value_call_expr2 CLOSE"
"func_return : "
"gen_expr : data_decl gen_expr | data_assign gen_expr | data_call gen_expr | if_stmt_expr gen_expr | loop_expr gen_expr"
"gen_expr : "
"data_decl : atype asymbol OPEN value_call_expr CLOSE COLON OPEN value_assign CLOSE"
"data_decl : atype asymbol OPEN value_call_expr CLOSE"
"data_decl : atype asymbol COLON OPEN value_assign CLOSE "
"value_call_expr : INT_NUMBER | asymbol | data_call | FLOAT_NUMBER | STRING | arkw"
"value_assign : extvalue_assign"
"avalue : INT_NUMBER | FLOAT_NUMBER | STRING | asymbol"
"extvalue_assign : opt_assign COLON value_call_expr COMMA extvalue_assign"
"extvalue_assign : opt_assign COLON value_call_expr"
"opt_assign : "
"opt_assign : STAR | asymbol | INT_NUMBER | STRING"
"opt_assign : OPEN value_call_expr2 CLOSE"
"data_assign : asymbol OPEN value_assign CLOSE"
"data_call : asymbol OPEN value_call_expr2 CLOSE | arkw OPEN value_call_expr2 CLOSE"
"value_call_expr2 : super_value value_call_expr2 "
"value_call_expr2 : COMMA super_value"
"value_call_expr2 : "
"super_value : avalue | data_call | if_stmt_expr | loop_expr"
"if_stmt_expr : IF OPEN tests CLOSE COLON OPEN func_body CLOSE elif_stmt_expr else_stmt_expr"
"elif_stmt_expr : ELIF OPEN tests CLOSE COLON OPEN func_body CLOSE elif_stmt_expr"
"elif_stmt_expr : "
"else_stmt_expr : ELSE COLON OPEN func_body CLOSE"
"else_stmt_expr : "
"loop_expr : FOR asymbol IN loop_range COLON OPEN func_body CLOSE"
"loop_expr : FOR loop_range AS asymbol COLON OPEN func_body CLOSE"
"loop_expr : FOR loop_range COLON OPEN func_body CLOSE"
"loop_range : OPEN value_call_expr RANGE value_call_expr CLOSE"
"loop_range : OPEN asymbol CLOSE | OPEN data_call CLOSE"
"tests : inside_test append_test tests"
"tests : inside_test"
"inside_test : bool_value"
"inside_test : bool_value comparison bool_value"
"bool_value : NOT data_call | NOT avalue"
"bool_value : data_call | avalue"
"append_test : AND | OR"
"comparison : EQ | GT | LT | GET | LET | NEQ"
"arkw : H | X | Z | Y | CNOT | SWAP | CZ | RX | RZ | RY | T | T_DAG | S | S_DAG | CR | TOFFOLI | SUPERPOSN | AMPLIFICATION | RESET | ADD | MULT | DIV | POWER | LENGTH | SQRT | INT_SQRT | PRINT"