"""Important keys for parsing and evaluation."""

IMPORTS_KEY = 'imports'

MAIN_KEY = 'main'
FUNCTION_KEY = 'function'

PARAMS_KEY = 'params'
BODY_KEY = 'body'
RETURN_KEY = 'return'

ATTR_DECL_KEY = 'attr_decl'
SIZE_DECL_KEY = 'size_decl'
ASSIGN_EXPR_KEY = 'assign_expr'
OPT_ASSIGN_KEY = 'opt_assign'

CALL_KEY = 'call'
CALLER_KEY = 'caller'
CALLER_ARGS_KEY = 'caller_args'

TYPE_KEY = 'type'
SYMBOL_KEY = 'symbol'

IF_KEY = 'if'
ELIF_KEY = 'elif'
ELSE_KEY = 'else'

IF_TEST_KEY = 'test'
IF_LOGIC_OP_KEY = 'logical_operator'

LOOP_KEY = 'loop'
LOOP_RANGE_KEY = 'range'
LOOP_VAR_KEY = 'loop_var'
LOOP_START_KEY = 'start'
LOOP_END_KEY = 'end'

# Expressions as keys in ordered sequence for the PreEvaluator and Evaluator
PROGRAM_DICT_EXPRS = dict(
    CALL_FUNC_EXPR=(FUNCTION_KEY,),
    CALL_MAIN_EXPR=(MAIN_KEY,),
    FUNC_MAIN_PARAMS_BODY_RETURN_EXPR=(SYMBOL_KEY, TYPE_KEY, PARAMS_KEY, BODY_KEY, RETURN_KEY),
    FUNC_MAIN_BODY_RETURN_EXPR=(SYMBOL_KEY, TYPE_KEY, BODY_KEY, RETURN_KEY),
    FUNC_MAIN_BODY_EXPR=(SYMBOL_KEY, TYPE_KEY, BODY_KEY),
    FUNC_MAIN_EXPR=(SYMBOL_KEY, TYPE_KEY),
    FUNC_MAIN_PARAMS_RETURN_EXPR=(SYMBOL_KEY, TYPE_KEY, PARAMS_KEY, RETURN_KEY),
    FUNC_MAIN_RETURN_EXPR=(SYMBOL_KEY, TYPE_KEY, RETURN_KEY),
    FUNC_MAIN_PARAMS_BODY=(SYMBOL_KEY, TYPE_KEY, PARAMS_KEY, BODY_KEY),
    ATTR_DECL_EXPR0=(ATTR_DECL_KEY,),
    ATTR_DECL_EXPR=(SYMBOL_KEY,),
    ATTR_DECL_SIZE_EXPR=(SYMBOL_KEY, TYPE_KEY, SIZE_DECL_KEY),
    ATTR_DECL_ASSIGN_EXPR=(SYMBOL_KEY, TYPE_KEY, ASSIGN_EXPR_KEY),
    ATTR_DECL_SIZE_ASSIGN_EXPR=(SYMBOL_KEY, TYPE_KEY, SIZE_DECL_KEY, ASSIGN_EXPR_KEY),
    CALL_EXPR=(CALL_KEY,),
    CALL_OPT_EXPR=(OPT_ASSIGN_KEY, CALL_KEY),
    CALLER_ATTR_EXPR=(CALLER_ARGS_KEY, CALLER_KEY),
)

PROGRAM_LIST_EXPRS = [v for k, v in PROGRAM_DICT_EXPRS.items()]
