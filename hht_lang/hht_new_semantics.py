from hht_core_ast import *

s = [
    ("program : functions main", Program, [0, 1]),
    ("functions : function functions", Functions, [0, 1]),
    ("functions : ", Functions, []),
    ("function : FUNCTION func_template", Function, [1]),
    ("main : MAIN func_template", Main, [1]),
    ("main : ", Main, []),
    ("func_template : atype asymbol func_params COLON OPEN func_body func_return CLOSE", FuncTempl, [0, 1, 2, 5, 6]),
    ("atype : NULL_TYPE | BOOL_TYPE | INTEGER_TYPE | FLOAT_TYPE | STRING_TYPE | GATES_TYPE | REGISTER_TYPE | LIST_TYPE | HASHMAP_TYPE | MEAS_TYPE", TypeRKW, [0]),
    ("asymbol : SYMBOL | QSYMBOL", ASymbol, [0]),
    ("func_params : OPEN atype asymbol func_params2 CLOSE", FuncParams, [1, 2, 3]),
    ("func_params :  ", FuncParams, []),
    ("func_params2 : COMMA atype asymbol func_params2", FuncParams, [1, 2, 3]),
    ("func_params2 : ", FuncParams, []),
    ("func_body : gen_expr", FuncBody, [0]),
    ("func_return : RETURN OPEN value_call_expr2 CLOSE | MEASURE OPEN value_call_expr2 CLOSE", FuncReturn, [2]),
    ("func_return : ", FuncReturn, []),
    ("gen_expr : data_decl gen_expr | data_assign gen_expr | data_call gen_expr | if_stmt_expr gen_expr | loop_expr gen_expr", GenExpr, [0, 1]),
    ("gen_expr : ", GenExpr, []),
    ("data_decl : atype asymbol OPEN value_call_expr CLOSE COLON OPEN value_assign CLOSE", DataDeclaration, [0, 1, 3, 7]),
    ("data_decl : atype asymbol OPEN value_call_expr CLOSE", DataDeclaration, [0, 1, 3]),
    ("data_decl : atype asymbol COLON OPEN value_assign CLOSE ", DataDeclaration, [0, 1, None, 4]),
    ("value_call_expr : INT_NUMBER | asymbol | data_call | FLOAT_NUMBER | STRING | arkw", ValueCallExpr, [0]),
    ("value_assign : extvalue_assign", ValueAssign, [0]),
    ("avalue : INT_NUMBER | FLOAT_NUMBER | STRING | asymbol", AValue, [0]),
    ("extvalue_assign : opt_assign COLON value_call_expr COMMA extvalue_assign", ExtValueAssign, [2, 0, 4]),
    ("extvalue_assign : opt_assign COLON value_call_expr", ExtValueAssign, [2, 0]),
    ("opt_assign : ", OptAssign, []),
    ("opt_assign : STAR | asymbol | INT_NUMBER | STRING", OptAssign, [0]),
    ("opt_assign : OPEN value_call_expr2 CLOSE", OptAssign, [1]),
    ("data_assign : asymbol OPEN value_assign CLOSE", DataAssign, [0, 2]),
    ("data_call : asymbol OPEN value_call_expr2 CLOSE | arkw OPEN value_call_expr2 CLOSE", DataCall, [0, 2]),
    ("value_call_expr2 : super_value value_call_expr2 ", ValueCallExpr2, [0, 1]),
    ("value_call_expr2 : COMMA super_value", ValueCallExpr2, [1]),
    ("value_call_expr2 : ", ValueCallExpr2, []),
    ("super_value : avalue | data_call | if_stmt_expr | loop_expr", SuperValue, [0]),
    ("if_stmt_expr : IF OPEN tests CLOSE COLON OPEN func_body CLOSE elif_stmt_expr else_stmt_expr", IfStmtExpr, [2, 6, 8, 9]),
    ("elif_stmt_expr : ELIF OPEN tests CLOSE COLON OPEN func_body CLOSE elif_stmt_expr", ElifStmtExpr, [2, 6, 8]),
    ("elif_stmt_expr : ", ElifStmtExpr, []),
    ("else_stmt_expr : ELSE COLON OPEN func_body CLOSE", ElseStmtExpr, [3]),
    ("else_stmt_expr : ", ElseStmtExpr, []),
    ("loop_expr : FOR asymbol IN loop_range COLON OPEN func_body CLOSE", LoopExpr, [3, 6, 1]),
    ("loop_expr : FOR loop_range AS asymbol COLON OPEN func_body CLOSE", LoopExpr, [1, 6, 3]),
    ("loop_expr : FOR loop_range COLON OPEN func_body CLOSE", LoopExpr, [1, 4]),
    ("loop_range : OPEN value_call_expr RANGE value_call_expr CLOSE", LoopRange, [1, 3]),
    ("loop_range : OPEN asymbol CLOSE | OPEN data_call CLOSE", LoopRange, [1]),
    ("tests : inside_test append_test tests", IfTests, [0, 1, 2]),
    ("tests : inside_test", IfTests, [0]),
    ("inside_test : bool_value", InsideIfTest, [0]),
    ("inside_test : bool_value comparison bool_value", InsideIfTest, [0, 1, 2]),
    ("bool_value : NOT data_call | NOT avalue", BoolValue, [1, 0]),
    ("bool_value : data_call | avalue", BoolValue, [0]),
    ("append_test : AND | OR", AppendIfTest, [0]),
    ("comparison : EQ | GT | LT | GET | LET | NEQ", ComparisonIfTest, [0]),
    ("arkw : H | X | Z | Y | CNOT | SWAP | CZ | RX | RZ | RY | T | T_DAG | S | S_DAG | CR | TOFFOLI | SUPERPOSN | AMPLIFICATION | RESET | ADD | MULT | DIV | POWER | LENGTH | SQRT | INT_SQRT | PRINT", ARKW, [0]),
    ]
